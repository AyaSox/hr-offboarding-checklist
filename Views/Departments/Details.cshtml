@model OffboardingChecklist.Models.Department

@{
    ViewData["Title"] = "Department Details";
}

<div class="page-header mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <h1>
            <i class="fas fa-building text-primary"></i>
            Department Details
        </h1>
        <div>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning">
                <i class="fas fa-edit"></i> Edit
            </a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">
                <i class="fas fa-trash"></i> Delete
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0 d-flex align-items-center">
                    <i class="fas fa-building me-2"></i>
                    @Model.Name
                    @if (Model.IsActive)
                    {
                        <span class="badge bg-success ms-2">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary ms-2">Inactive</span>
                    }
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="text-muted mb-3">
                            <i class="fas fa-info-circle me-1"></i>Basic Information
                        </h6>
                        <dl class="row">
                            <dt class="col-sm-4">Name:</dt>
                            <dd class="col-sm-8">@Model.Name</dd>

                            <dt class="col-sm-4">Email:</dt>
                            <dd class="col-sm-8">
                                <a href="mailto:@Model.EmailAddress" class="text-decoration-none">
                                    <i class="fas fa-envelope me-1"></i>@Model.EmailAddress
                                </a>
                            </dd>

                            <dt class="col-sm-4">Status:</dt>
                            <dd class="col-sm-8">
                                @if (Model.IsActive)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check me-1"></i>Active
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">
                                        <i class="fas fa-pause me-1"></i>Inactive
                                    </span>
                                }
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6 class="text-muted mb-3">
                            <i class="fas fa-user-tie me-1"></i>Management
                        </h6>
                        <dl class="row">
                            @if (!string.IsNullOrEmpty(Model.ManagerName))
                            {
                                <dt class="col-sm-5">Manager:</dt>
                                <dd class="col-sm-7">@Model.ManagerName</dd>
                            }

                            @if (!string.IsNullOrEmpty(Model.ManagerEmail))
                            {
                                <dt class="col-sm-5">Manager Email:</dt>
                                <dd class="col-sm-7">
                                    <a href="mailto:@Model.ManagerEmail" class="text-decoration-none">
                                        <i class="fas fa-envelope me-1"></i>@Model.ManagerEmail
                                    </a>
                                </dd>
                            }

                            @if (string.IsNullOrEmpty(Model.ManagerName) && string.IsNullOrEmpty(Model.ManagerEmail))
                            {
                                <dd class="col-sm-12 text-muted">No manager information available</dd>
                            }
                        </dl>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mt-3">
                        <h6 class="text-muted mb-2">
                            <i class="fas fa-align-left me-1"></i>Description
                        </h6>
                        <p class="mb-0">@Model.Description</p>
                    </div>
                }

                <div class="mt-4 pt-3 border-top">
                    <h6 class="text-muted mb-2">
                        <i class="fas fa-history me-1"></i>Department History
                    </h6>
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">
                                <strong>Created:</strong> @Model.CreatedOn.ToString("MMM dd, yyyy HH:mm")
                            </small>
                        </div>
                        <div class="col-md-6">
                            <small class="text-muted">
                                <strong>Created By:</strong> @Model.CreatedBy
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fas fa-chart-bar me-1"></i>Department Statistics
                </h6>
            </div>
            <div class="card-body">
                <div class="text-center">
                    <p class="mb-2">
                        <i class="fas fa-tasks text-primary me-1"></i>
                        <strong>Task Statistics</strong>
                    </p>
                    <small class="text-muted">Statistics will be available once tasks are assigned to this department</small>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fas fa-cogs me-1"></i>Quick Actions
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning btn-sm">
                        <i class="fas fa-edit me-1"></i>Edit Department
                    </a>
                    @if (Model.IsActive)
                    {
                        <a href="#" class="btn btn-outline-secondary btn-sm" 
                           onclick="toggleDepartmentStatus(@Model.Id, false)">
                            <i class="fas fa-pause me-1"></i>Deactivate
                        </a>
                    }
                    else
                    {
                        <a href="#" class="btn btn-outline-success btn-sm" 
                           onclick="toggleDepartmentStatus(@Model.Id, true)">
                            <i class="fas fa-play me-1"></i>Activate
                        </a>
                    }
                    <a asp-controller="TaskTemplates" asp-action="Index" 
                       asp-route-department="@Model.Name" class="btn btn-outline-info btn-sm">
                        <i class="fas fa-tasks me-1"></i>View Templates
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleDepartmentStatus(id, activate) {
            const action = activate ? 'activate' : 'deactivate';
            const title = activate ? 'Activate Department' : 'Deactivate Department';
            const text = activate ? 
                'This will allow the department to receive new task assignments.' :
                'This will prevent new task assignments but existing tasks remain accessible.';
            
            Swal.fire({
                title: title,
                text: text,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: activate ? '#198754' : '#6c757d',
                cancelButtonColor: '#dc3545',
                confirmButtonText: activate ? 'Yes, Activate' : 'Yes, Deactivate'
            }).then((result) => {
                if (result.isConfirmed) {
                    // This would require an additional action in the controller
                    // For now, redirect to edit page
                    window.location.href = `/Departments/Edit/${id}`;
                }
            });
        }
    </script>
}